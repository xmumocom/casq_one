# Default settings for the simulation
#

## Scenario settings
Scenario.name = default_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 43200

## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 400k
btInterface.transmitRange = 350

# High speed, long range, interface for group 4，
highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeeds = 10M
highspeedInterface.transmitRange = 100


# Define 6 different node groups
Scenario.nrofHostGroups = 7

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.router = SprayAndWaitRouter

Group.bufferSize = 200M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 2
Group.interface1 = btInterface
Group.interface2 = highspeedInterface
# Walking speeds
Group.speed = 3, 10
Group.msgTtl = 300

Group.nrofHosts = 1

# The Tram groups
Group1.groupID = c
Group1.bufferSize = 300M
Group1.movementModel = MapBasedMovement
Group1.routeType = 1
Group1.waitTime = 10, 30
Group1.speed = 1, 4
Group1.nrofHosts = 120
Group1.nrofInterfaces = 1
Group1.interface1 = highspeedInterface
#Group1.interface2 = highspeedInterface

Group2.groupID = r1
Group2.nrofHosts = 1
Group2.movementModel = StationaryMovement
Group2.nodeLocation = 2500,2000
Group2.nrofInterfaces = 1
Group2.interface1 = btInterface

Group3.groupID = r2
Group3.nrofHosts = 1
Group3.movementModel = StationaryMovement
Group3.nodeLocation = 2250,1750
Group3.nrofInterfaces = 1
Group3.interface1 = btInterface

Group4.groupID = r3
Group4.nrofHosts = 1
Group4.movementModel = StationaryMovement
Group4.nodeLocation = 2500,1500
Group4.nrofInterfaces = 1
Group4.interface1 = btInterface

Group5.groupID = r4
Group5.nrofHosts = 1
Group5.movementModel = StationaryMovement
Group5.nodeLocation = 2000,2000
Group5.nrofInterfaces = 1
Group5.interface1 = btInterface

Group6.groupID = r5
Group6.nrofHosts = 1
Group6.movementModel = StationaryMovement
Group6.nodeLocation = 2500,2500
Group6.nrofInterfaces = 1
Group6.interface1 = btInterface

Group7.groupID = r6
Group7.nrofHosts = 1
Group7.movementModel = StationaryMovement
Group7.nodeLocation = 1280,1750
Group7.nrofInterfaces = 1
Group.interface1 = btInterface

## 
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)

# Message sizes (500kB - 1MB)

# range of message source/destination addresses

# Message ID prefix
#Events1.prefix = M
#Events1.interval = 30,40
#Events1.hosts = 0,30
#Events1.tohosts = 0,44
#Events1.size = 1k,10k
## 事件产生参数
# Class of the first event generator
Events1.class = RequestMessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 40,60
# Message sizes (50kB - 500kB)
Events1.size = 50k,500k
Events1.hosts=0,39
# range of message source/destination addresses
Events1.tohosts = 40,45
# Message ID prefix
Events1.prefix = Q


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 45000, 34000
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 1

MapBasedMovement.mapFile1 = data/xiamen1.wkt
## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 5
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = DeliveredMessagesReport
Report.report2 = MessageDeliveryReport
Report.report3 = CreatedMessagesReport
Report.report4 = MessageReport
Report.report5 = JudgeCharamReport
## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 20
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/xmu.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
